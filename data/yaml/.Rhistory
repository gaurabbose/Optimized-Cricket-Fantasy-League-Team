install.packages("rmarkdown")
library(rmarkdown)
install.packages("yaml")
install.packages("yaml")
library(yaml)
data <- yaml.load_file("C:\Users\fm114rt\Documents\R Projects")
data <- yaml.load_file("\Users\fm114rt\Documents\R Projects")
data <- yaml.load_file("Users\fm114rt\Documents\R Projects")
data <- yaml.load_file("Users\fm114rt\Documents\R Projects\335982.yaml")
data <- yaml.load_file("Users/fm114rt/Documents/R Projects/335982.yaml")
data <- yaml.load_file("C:\Users\fm114rt\Documents\R Projects\335982.yaml")
data <- yaml.load_file("Users\fm114rt\Documents\R Projects\335982.yaml")
data <- yaml.load_file("C:/Users/fm114rt/Documents/R Projects/335982.yaml")
View(data)
View(data)
install.packages("yorkr")
knitr::opts_chunk$set(echo = TRUE)
convertYaml2RDataframe("C:/Users/fm114rt/Documents/R Projects")
library(yorkr)
convertYaml2RDataframe("C:/Users/fm114rt/Documents/R Projects")
convertYaml2RDataframe("C:/Users/fm114rt/Documents/R Projects/335982.yaml")
convertYaml2RDataframe("C:/Users/fm114rt/Documents/R Projects")
convertYaml2RDataframe("C:/Users/fm114rt/Documents/R Projects")
convertYaml2RDataframe("335982.yaml"",C:/Users/fm114rt/Documents/R Projects")
convertYaml2RDataframe("335982.yaml","C:/Users/fm114rt/Documents/R Projects")
data2<-convertYaml2RDataframe("335982.yaml","C:/Users/fm114rt/Documents/R Projects")
load("C:/Users/fm114rt/Documents/R Projects/IPL/Royal Challengers Bangalore-Kolkata Knight Riders-2008-04-18.RData")
View(overs)
dfs=c()
end = 335982
for(i in range(335982:end)){
dfs[i]=convertYaml2RDataframe(cat(i+".yaml"),"C:/Users/fm114rt/Documents/R Projects")
}
for(i in range(335982:end)){
dfs[i]=convertYaml2RDataframe(cat(i,".yaml"),"C:/Users/fm114rt/Documents/R Projects")
}
end = 335992
for(i in range(335982:end)){
dfs[i]=convertYaml2RDataframe(cat(i,".yaml"),"C:/Users/fm114rt/Documents/R Projects")
}
for(i in range(335982:end)){
dfs[i]=convertYaml2RDataframe(cat(i,".yaml", sep=""),"C:/Users/fm114rt/Documents/R Projects")
}
data2<-convertYaml2RDataframe("335982.yaml","C:/Users/fm114rt/Documents/R Projects")
dfs=c()
end = 335992
for(i in range(335982:end)){
dfs[i]=convertYaml2RDataframe(cat(i,".yaml",),"C:/Users/fm114rt/Documents/R Projects")
}
dfs=c()
end = 335992
for(i in range(335982:end)){
dfs[i]=convertYaml2RDataframe(cat(i,".yaml",sep=""),"C:/Users/fm114rt/Documents/R Projects")
}
dfs=c()
end = 335992
for(i in range(335982:end)){
df=convertYaml2RDataframe(cat(i,".yaml",sep=""),"C:/Users/fm114rt/Documents/R Projects")
}
dfs=c()
end = 335992
for(i in range(335982:end)){
convertYaml2RDataframe(cat(i,".yaml",sep=""),"C:/Users/fm114rt/Documents/R Projects")
}
end = 335992
for(i in range(335982:end)){
convertYaml2RDataframe(paste0(i,".yaml"),"C:/Users/fm114rt/Documents/R Projects")
}
for(i in range(335982:335992)){
convertYaml2RDataframe(paste0(i,".yaml"),"C:/Users/fm114rt/Documents/R Projects")
}
for(i in 335982:335992){
convertYaml2RDataframe(paste0(i,".yaml"),"C:/Users/fm114rt/Documents/R Projects")
}
setwd("C:/Users/fm114rt/Documents/R Projects")
setwd("C:/Users/fm114rt/Documents/R Projects")
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
setwd("C:/Users/fm114rt/Documents/R Projects/IPL/matches")
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <- read.table(file, header=TRUE, sep="\t")
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
View(dataset)
View(dataset)
setwd("C:/Users/fm114rt/Documents/R Projects/IPL/matches")
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <-convertYaml2RDataframe(file)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-read.table(file, header=TRUE, sep="\t")
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
View(dataset)
View(dataset)
setwd("C:/Users/fm114rt/Documents/R Projects/IPL/matches")
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <-convertYaml2RDataframe(file)
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <convertYaml2RDataframe(file)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
load("C:/Users/fm114rt/Documents/R Projects/IPL/matches/Chennai Super Kings-Mumbai Indians-2008-04-23.RData")
View(overs)
View(overs)
setwd("C:/Users/fm114rt/Documents/R Projects/IPL/matches")
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <-get(load(file))
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-get(load(file))
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
setwd("C:/Users/fm114rt/Documents/R Projects/IPL/matches")
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <-get(load(file))
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-get(load(file))
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
View(dataset)
setwd("C:/Users/fm114rt/Documents/R Projects/IPL/data/yaml")
file_list <- list.files()
file_list <- list.files()
for(file in file_list){
convertYaml2RDataframe(file,"C:/Users/fm114rt/Documents/R Projects/IPL")
}
for(file in file_list){
convertYaml2RDataframe(file,"C:/Users/fm114rt/Documents/R Projects/IPL")
}
for(file in file_list){
convertYaml2RDataframe(file,"C:/Users/fm114rt/Documents/R Projects/IPL/data")
}
for(file in file_list){
convertYaml2RDataframe(file,"C:/Users/fm114rt/Documents/R Projects/IPL/data/matches")
}
for(file in file_list){
convertYaml2RDataframe(file,"C:/Users/fm114rt/Documents/R Projects/IPL/data/yaml", "C:/Users/fm114rt/Documents/R Projects/IPL/data/matches")
}
setwd("C:/Users/fm114rt/Documents/R Projects/IPL/data/yaml")
file_list <- list.files()
for(file in file_list){
convertYaml2RDataframe(file,"C:/Users/fm114rt/Documents/R Projects/IPL/data/yaml", "C:/Users/fm114rt/Documents/R Projects/IPL/data/matches")
}
convertYaml2RDataframe(file,"C:/Users/fm114rt/Documents/R Projects/IPL/data/yaml", "C:/Users/fm114rt/Documents/R Projects/IPL/data/matches")
get_wd()
getwd()
setwd("C:/Users/fm114rt/Documents/R Projects/IPL/data/yaml")
file_list <- list.files()
for(file in file_list){
convertYaml2RDataframe(file,"C:/Users/fm114rt/Documents/R Projects/IPL/data/yaml", "C:/Users/fm114rt/Documents/R Projects/IPL/data/matches")
}
library(rmarkdown)
library(yaml)
library(yorkr)
setwd("C:/Users/fm114rt/Documents/R Projects/IPL/data/yaml")
file_list <- list.files()
for(file in file_list){
tryCatch({
convertYaml2RDataframe(file,"C:/Users/fm114rt/Documents/R Projects/IPL/data/yaml", "C:/Users/fm114rt/Documents/R Projects/IPL/data/matches")
}, error = function(e){})
}
setwd("C:/Users/fm114rt/Documents/R Projects/IPL/data/matches")
file_list <- list.files()
for (file in file_list){
# if the merged dataset doesn't exist, create it
if (!exists("dataset")){
dataset <-get(load(file))
}
# if the merged dataset does exist, append to it
if (exists("dataset")){
temp_dataset <-get(load(file))
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
View(dataset)
View(dataset)
View(dataset)
View(dataset)
head(dataset)
rmarkdown::render("ipl-cricket-predictive-model.Rmd")
rmarkdown::render(""C:/Users/fm114rt/Documents/R Projects/ipl-cricket-predictive-model.Rmd")
rmarkdown::render("C:/Users/fm114rt/Documents/R Projects/ipl-cricket-predictive-model.Rmd")
rmarkdown::render("C:/Users/fm114rt/Documents/R Projects/IPL/ipl-cricket-predictive-model.Rmd")
rmarkdown::render("C:/Users/fm114rt/Documents/R Projects/IPL/ipl-cricket-predictive-model.Rmd")
rmarkdown::render("C:/Users/fm114rt/Documents/R Projects/IPL/ipl-cricket-predictive-model.Rmd")
bowling_data <- data.frame(dataset[,6:17])
View(bowling_data)
drop(bowling_data$wicketFielder)
View(bowling_data)
rm(bowling_data$wicketFielder)
bowling_data$wicketFielder<-NULL
View(bowling_data)
bowling_data <- data.frame(dataset[,6:15])
View(bowling_data)
bowling_data <- data.frame(dataset[,6:17])
bowling_data <- data.frame(dataset[,6:17])
bowling_data$wicketFielder <- NULL
bowling_data$wicketPlayerOut <- NULL
View(bowling_data)
bowling_data <- data.frame(cbind(dataset[,4],dataset[,6:14], dataset[,16]))
View(bowling_data)
bowling_data <- data.frame(cbind(dataset$bowler,dataset[,6:14], dataset$wicketKind))
View(bowling_data)
summary(bowling_dataset$dataset.wicketKind)
summary(bowling_data$dataset.wicketKind)
for(i in bowling_data){
if(bowling_data$dataset.wicketKind[i] == "not-out")
bowling_data$dataset.wicketKind[i]=0
else
bowling_data$dataset.wicketKind[i]=1
}
bowling_data <- data.frame(cbind(dataset$bowler,dataset[,6:14], dataset$wicketKind), header=TRUE)
View(bowling_data)
for(i in bowling_data){
if(bowling_data$dataset.wicketKind[i] == "not-out")
bowling_data$dataset.wicketKind[i]=0
else
bowling_data$dataset.wicketKind[i]=1
}
View(bowling_data)
bowling_data <- data.frame(cbind(dataset$bowler,dataset[,6:14], dataset$wicketKind))
for(i in bowling_data){
if(bowling_data$dataset.wicketKind[i] == "not-out")
bowling_data$dataset.wicketKind[i]=0
else
bowling_data$dataset.wicketKind[i]=1
}
View(bowling_data)
a
bowling_data <- data.frame(cbind(dataset$bowler,dataset[,6:14], dataset$wicketKind))
View(bowling_data)
bowling_data <- data.frame(cbind(dataset$bowler,dataset[,6:14], dataset$wicketKind))
for(i in bowling_data){
if(identical(bowling_data$dataset.wicketKind[i],"not-out"))
bowling_data$dataset.wicketKind[i]=0
else
bowling_data$dataset.wicketKind[i]=1
}
View(bowling_data)
for(i in bowling_data$dataset.bowler){
if(identical(bowling_data$dataset.wicketKind[i],"not-out"))
bowling_data$dataset.wicketKind[i]=0
else
bowling_data$dataset.wicketKind[i]=1
}
bowling_data <- data.frame(cbind(dataset$bowler,dataset[,6:14], dataset$wicketKind))
for(i in bowling_data$dataset.bowler){
if(identical(bowling_data$dataset.wicketKind[i],"not-out"))
bowling_data$dataset.wicketKind[i]=0
else
bowling_data$dataset.wicketKind[i]=1
}
factor(bowling_data$dataset.wicketKind)
factor(bowling_data$dataset.wicketKind, levels=c(0,1,2,3,4,5))
bowling_data <- data.frame(cbind(dataset$bowler,dataset[,6:14], dataset$wicketKind))
bowling_data$dataset.bowler[bowling_data$dataset.bowler == "not-out"] <- 0
bowling_data$dataset.bowler[as.factor(bowling_data$dataset.bowler) == "not-out"] <- 0
bowling_data$dataset.bowler[as.String(bowling_data$dataset.bowler) == "not-out"] <- 0
bowling_data$dataset.bowler[toString(bowling_data$dataset.bowler) == "not-out"] <- 0
bowling_data$dataset.bowler[toString(bowling_data$dataset.bowler) == "not-out"] <- 0
bowling_data$dataset.bowler[identical(toString(bowling_data$dataset.bowler), "not-out"] <- 0
bowling_data$dataset.bowler[identical(toString(bowling_data$dataset.bowler)), "not-out"] <- 0
bowling_data <- data.frame(cbind(dataset$bowler,dataset[,6:14], dataset$wicketKind), stringsAsFactors = FALSE)
bowling_data$dataset.bowler[bowling_data$dataset.bowler == "not-out"] <- 0
"hi"=="hi"
bowling_data$dataset.bowler[2]
bowling_data <- data.frame(cbind(dataset$bowler,dataset[,6:14], dataset$wicketKind), stringsAsFactors = FALSE)
bowling_data$dataset.wicketKind[bowling_data$dataset.wicketKind == "not-out"] <- 0
View(bowling_data)
bowling_data$dataset.wicketKind[bowling_data$dataset.wicketKind != "not-out"] <- 1
bowling_data$dataset.wicketKind[bowling_data$dataset.wicketKind == "not-out"] <- 0
bowling_data$dataset.wicketKind[bowling_data$dataset.wicketKind != "not-out"] <- 1
bowling_data <- data.frame(cbind(dataset$bowler,dataset[,6:14], dataset$wicketKind), stringsAsFactors = FALSE)
bowling_data$dataset.wicketKind[bowling_data$dataset.wicketKind == "not-out"] <- 0
bowling_data$dataset.wicketKind[bowling_data$dataset.wicketKind != "not-out"] <- 1
bowler_stats <- aggregate(dataset$bowler,FUN = "sum")
bowler_stats <- aggregate(dataset,dataset$bowler,FUN = "sum")
bowler_stats <- aggregate(dataset,c(dataset$bowler),FUN = "sum")
bowler_stats <- aggregate(dataset,list(dataset$bowler),FUN = "sum")
View(bowling_data)
bowling_data <- data.frame(cbind(dataset$bowler,dataset[,6:14], dataset$wicketKind), stringsAsFactors = FALSE)
bowling_data$dataset.wicketKind[bowling_data$dataset.wicketKind == "not-out"] <- 0
View(bowling_data)
bowler_stats <- aggregate(dataset,list(dataset$bowler),FUN = "sum")
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Selecting An Optimal IPL Cricket Fantasy Team
Hello! This objective of this predictive model is to predict the optimal IPL (Indian Premier League) Fatnasy League Cricket Team. This is a simulated web game that allows individuals to form leagues with their family and friends, wherein each individual selects a team of players from the entire league and is scored based on their each of their players' performance. The winning team with the highest cumulative score by the end of the season gains fame, glory, and hopefully a predesignated pot of cash.
The individual faces the constraint that they must pick players with a total budget of Rs. 10M and each player has a varying cost. The situation therefore presents a lofty challenge which is to build an optimization model that weights the merits of a player against his monetary cost / opportunity cost.
This program will attempt to achieve its goal through a number of major steps:
1. Import historical IPL cricket data for 615 matches (for every ball bowled from 2008 - 2015) and transform it into a relevant format i.e. create a database of IPL player statistics
2. Group the players into batsman and bowlers, since we aim to pick 5 of each type. The 1 remaining wicket keeper will not be within the scope of this model.
3. Within each of the two cohorts, rank the players based on a scoring system, that takes into account their historical performance, but weighted towards more recent performance.
4. Model out and solve an optimization problem that rewards a higher score but is constrained by the budget to create a team.
## 1. Importing Data
The data has been downloaded from cricsheet but is in .yaml format for each game. We convert these to data frames.
```{r, eval = FALSE}
library(rmarkdown)
library(yaml)
library(yorkr)x`
setwd("C:/Users/fm114rt/Documents/R Projects/IPL/data/yaml")
file_list <- list.files()
for(file in file_list){
tryCatch({
convertYaml2RDataframe(file,"C:/Users/fm114rt/Documents/R Projects/IPL/data/yaml", "C:/Users/fm114rt/Documents/R Projects/IPL/data/matches")
}, error = function(e){})
}
